name: Execute Jenkins Build Job

on: 
  workflow_dispatch: 
    branches: 
      - main

env: 
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_SSH_KEY_BASE64: ${{ secrets.AWS_SSH_KEY_BASE64 }}
  JENKINS_USERNAME: ${{ secrets.JENKINS_USERNAME }}
  JENKINS_PASSWORD: ${{ secrets.JENKINS_PASSWORD }}
  JENKINS_JOB_NAME: ${{ secrets.JENKINS_JOB_NAME }}

jobs: 
  execute-jenkins-build-job: 
    name: Execute Jenkins Build Job
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./Terraform/Pipeline
    steps: 
    - uses: actions/checkout@v3
      name: GitHub Checkout
    - name: Replace Backend Placeholder BUCKET_NAME
      run: python3 ../../Utilities/replacer.py backend.tf backend.tf ~bucketname~ $BUCKET_NAME
    - name: Replace Backend Placeholder TABLE_NAME
      run: python3 ../../Utilities/replacer.py backend.tf backend.tf ~tablename~ $TABLE_NAME
    - name: Replace Backend Placeholder AWS_REGION
      run: python3 ../../Utilities/replacer.py backend.tf backend.tf ~region~ $AWS_REGION
    - name: Replace Placeholder AWS_REGION
      run: python3 ../../Utilities/replacer.py terraform.tfvars terraform.tfvars ~region~ $AWS_REGION
    - name: Replace Placeholder AWS_AMI
      run: python3 ../../Utilities/replacer.py terraform.tfvars terraform.tfvars ~ami~ $AWS_AMI
    - name: Replace Placeholder AWS_ITYPE
      run: python3 ../../Utilities/replacer.py terraform.tfvars terraform.tfvars ~itype~ $AWS_ITYPE
    - name: Replace Placeholder AWS_KEYNAME
      run: python3 ../../Utilities/replacer.py terraform.tfvars terraform.tfvars ~keyname~ $AWS_KEYNAME
    - name: Replace Placeholder AWS_SECGROUPNAME
      run: python3 ../../Utilities/replacer.py terraform.tfvars terraform.tfvars ~secgroupname~ $AWS_SECGROUPNAME
    - name: Decode and Save SSH Key
      run: mkdir files && echo "$AWS_SSH_KEY_BASE64" | base64 -i --decode > files/id_rsa && chmod 600 files/id_rsa
    - name: Terraform Init
      run: terraform init
    - name: Terraform Validate
      run: terraform validate
    - name: Terraform Output
      run: terraform output -raw jenkinsec2publicip > files/jenkinsip
    - name: SSH Add Credentials
      run: ssh -q -o StrictHostKeyChecking=accept-new -i files/id_rsa ubuntu@$(cat files/jenkinsip) -tt "cd RDGOAT > /dev/null 2>&1 || { mkdir RDGOAT && cd RDGOAT ; } ; echo $JENKINS_USERNAME | sudo tee JENKINS_USERNAME > /dev/null 2>&1 && echo $JENKINS_PASSWORD | sudo tee JENKINS_PASSWORD > /dev/null 2>&1 && echo $JENKINS_JOB_NAME | sudo tee JENKINS_JOB_NAME > /dev/null 2>&1"
    - name: SSH Execute Jenkins Build Job
      run: ssh -q -o StrictHostKeyChecking=accept-new -i files/id_rsa ubuntu@$(cat files/jenkinsip) -tt "curl -s -O https://raw.githubusercontent.com/RichardDeodutt/Deployment-5/main/Runners/runexecutejenkinsbuildjob.sh && sudo chmod +x runexecutejenkinsbuildjob.sh && sudo ./runexecutejenkinsbuildjob.sh"
    - name: SSH Remove Credentials
      run: ssh -q -o StrictHostKeyChecking=accept-new -i files/id_rsa ubuntu@$(cat files/jenkinsip) -tt "cd RDGOAT > /dev/null 2>&1 || { mkdir RDGOAT && cd RDGOAT ; } ; sudo rm JENKINS_USERNAME && sudo rm JENKINS_PASSWORD && sudo rm JENKINS_JOB_NAME"
    - name: Delete SSH Key and IPs
      if: always()
      run: rm files/id_rsa && rm files/jenkinsip
    - name: Jenkins Link
      if: always()
      run: printf "\033[0;32mJenkins Link ~>\033[0m http://$(terraform output -raw jenkinsec2publicip)/\n"
    - name: Terraform Server IP
      if: always()
      run: printf "\033[0;32mTerraform IP ~>\033[0m $(terraform output -raw terraformec2publicip)\n"
    - name: Docker Server IP
      if: always()
      run: printf "\033[0;32mDocker IP ~>\033[0m $(terraform output -raw dockerec2publicip)\n"